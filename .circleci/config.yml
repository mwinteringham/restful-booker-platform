# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  checkout_code:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    steps:
      - checkout
      - run:
          command: |
            mkdir ~/tmp
            for folder in `git log --format="" --name-only ${CIRCLE_COMPARE_URL##http*/} | cut -d"/" -f1 | sort -u`; do
              echo "$folder will be built in this run"
              touch ~/tmp/$folder.txt
            done
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/

  run_auth_build:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
              echo "[BUILDING] Auth"
              mvn clean install -Drevision=$(git rev-parse --short HEAD)
          working_directory: auth
      - save_cache:
          paths:
            - auth/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-auth

  run_booking_build:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
              echo "[BUILDING] Booking"
              mvn clean install -Drevision=$(git rev-parse --short HEAD)
          working_directory: booking
      - save_cache:
          paths:
            - booking/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-booking

  run_report_build:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
              echo "[BUILDING] Report"
              mvn clean install -Drevision=$(git rev-parse --short HEAD)
          working_directory: report
      - save_cache:
          paths:
            - report/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-report

  run_room_build:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
              echo "[BUILDING] Room"
              mvn clean install -Drevision=$(git rev-parse --short HEAD)
          working_directory: room
      - save_cache:
          paths:
            - room/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-room

  run_branding_build:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    environment:
        MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
              echo "[BUILDING] Branding"
              mvn clean install -Drevision=$(git rev-parse --short HEAD)
          working_directory: branding
      - save_cache:
          paths:
            - branding/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-branding

  run_message_build:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
              echo "[BUILDING] Message"
              mvn clean install -Drevision=$(git rev-parse --short HEAD)
          working_directory: message
      - save_cache:
          paths:
            - message/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-message

  run_assets_tests:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install Sauce Labs and Set Up Tunnel
          background: true
          command: |
            curl https://saucelabs.com/downloads/sc-4.5.3-linux.tar.gz -o saucelabs.tar.gz
            tar -xzf saucelabs.tar.gz
            cd sc-*
            bin/sc -u ${SAUCE_USERNAME} -k ${SAUCE_ACCESS_KEY}
      - run:
          command: |
              echo "[BUILDING] Assets"
              npm install
              npm test
              npm run build
              cd ..
              cd api
              wget --retry-connrefused --no-check-certificate -T 60 localhost:4445  # wait for Sauce Labs SC to be ready
              if [[ -z "${APPLITOOLS_API_KEY}" ]]; then
                printf "Skipping visual checks because no applitools api key has been set. Assign a key to APPLITOOLS_API_KEY to run visual checks"
                mvn install -Drevision=$(git rev-parse --short HEAD) -Dvisual.skip.test=true
              else
                build_ver = git rev-parse --short HEAD
                mvn install -Drevision=$(git rev-parse --short HEAD)
              fi
          working_directory: assets/js
          environment:
            BROWSER: remote
      - save_cache:
          paths:
            - assets/
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-assets

  build_auth_docker_image:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    steps:
      - restore_cache:
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-auth

      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          command: |
            echo $CIRCLE_BRANCH
            if [ -f ~/project/auth/target/restful-booker-platform-auth-*.jar ] && [ $CIRCLE_BRANCH == "master" ]; then
              echo "[BUILDING] Auth"
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker build -t mwinteringham/restfulbookerplatform_auth:$(ls target/restful-booker-platform-auth-*.jar | cut -d '-' -f 5 | cut -c1-11) .
              docker push mwinteringham/restfulbookerplatform_auth:$(ls target/restful-booker-platform-auth-*.jar | cut -d '-' -f 5 | cut -c1-11)
            else
              echo "[SKIPPING] Auth"
            fi
          working_directory: auth

  build_booking_docker_image:

      docker:
        - image: circleci/openjdk:11-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-booking

        - setup_remote_docker:
            docker_layer_caching: false

        - run:
            command: |
              if [ -f ~/project/booking/target/restful-booker-platform-booking-*.jar ] && [ $CIRCLE_BRANCH == "awsDeploy" ]; then
                echo "[BUILDING] Booking"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_booking:$(ls target/restful-booker-platform-booking-*.jar | cut -d '-' -f 5 | cut -c1-11) .
                docker push mwinteringham/restfulbookerplatform_booking:$(ls target/restful-booker-platform-booking-*.jar | cut -d '-' -f 5 | cut -c1-11)
              else
                echo "[SKIPPING] Booking"
              fi
            working_directory: booking

  build_report_docker_image:

      docker:
        - image: circleci/openjdk:11-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-report

        - setup_remote_docker:
            docker_layer_caching: false

        - run:
            command: |
              if [ -f ~/project/report/target/restful-booker-platform-report-*.jar ] && [ $CIRCLE_BRANCH == "awsDeploy" ]; then
                echo "[BUILDING] Report"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_report:$(ls target/restful-booker-platform-report-*.jar | cut -d '-' -f 5 | cut -c1-11) .
                docker push mwinteringham/restfulbookerplatform_report:$(ls target/restful-booker-platform-report-*.jar | cut -d '-' -f 5 | cut -c1-11)
              else
                echo "[SKIPPING] Report"
              fi
            working_directory: report

  build_room_docker_image:

      docker:
        - image: circleci/openjdk:11-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-room

        - setup_remote_docker:
            docker_layer_caching: false

        - run:
            command: |
              if [ -f ~/project/room/target/restful-booker-platform-room-*.jar ] && [ $CIRCLE_BRANCH == "awsDeploy" ]; then
                echo "[BUILDING] Room"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_room:$(ls target/restful-booker-platform-room-*.jar | cut -d '-' -f 5 | cut -c1-11) .
                docker push mwinteringham/restfulbookerplatform_room:$(ls target/restful-booker-platform-room-*.jar | cut -d '-' -f 5 | cut -c1-11)
              else
                echo "[SKIPPING] Room"
              fi
            working_directory: room

  build_branding_docker_image:

      docker:
        - image: circleci/openjdk:11-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-branding

        - setup_remote_docker:
            docker_layer_caching: false

        - run:
            command: |
              if [ -f ~/project/branding/target/restful-booker-platform-branding-*.jar ] && [ $CIRCLE_BRANCH == "awsDeploy" ]; then
                echo "[BUILDING] Branding"
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker build -t mwinteringham/restfulbookerplatform_branding:$(ls target/restful-booker-platform-branding-*.jar | cut -d '-' -f 5 | cut -c1-11) .
                docker push mwinteringham/restfulbookerplatform_branding:$(ls target/restful-booker-platform-branding-*.jar | cut -d '-' -f 5 | cut -c1-11)
              else
                echo "[SKIPPING] Branding"
              fi
            working_directory: branding

  build_message_docker_image:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    steps:
      - restore_cache:
          key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-message

      - setup_remote_docker:
          docker_layer_caching: false

      - run:
          command: |
            if [ -f ~/project/message/target/restful-booker-platform-message-*.jar ] && [ $CIRCLE_BRANCH == "awsDeploy" ]; then
              echo "[BUILDING] Message"
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker build -t mwinteringham/restfulbookerplatform_message:$(ls target/restful-booker-platform-message-*.jar | cut -d '-' -f 5 | cut -c1-11) .
              docker push mwinteringham/restfulbookerplatform_message:$(ls target/restful-booker-platform-message-*.jar | cut -d '-' -f 5 | cut -c1-11)
            else
              echo "[SKIPPING] Message"
            fi
          working_directory: message

  build_assets_docker_image:

        docker:
          - image: circleci/openjdk:11-jdk-node-browsers

        steps:
          - restore_cache:
              key: v1-dependencies-{{ .Environment.CIRCLE_SHA1 }}-assets

          - setup_remote_docker:
              docker_layer_caching: false

          - run:
              command: |
                if [ -f ~/project/assets/api/target/restful-booker-platform-assets-*.jar ] && [ $CIRCLE_BRANCH == "awsDeploy" ]; then
                  echo "[BUILDING] Assets"
                  docker login -u $DOCKER_USER -p $DOCKER_PASS
                  docker build -t mwinteringham/restfulbookerplatform_assets:$(ls api/target/restful-booker-platform-assets-*.jar | cut -d '-' -f 5 | cut -c1-11) .
                  docker push mwinteringham/restfulbookerplatform_assets:$(ls api/target/restful-booker-platform-assets-*.jar | cut -d '-' -f 5 | cut -c1-11)
                else
                  echo "[SKIPPING] Assets"
                fi
              working_directory: assets

  deploy_auth_docker_image:

      docker:
        - image: google/cloud-sdk

      steps:
        - restore_cache:
            key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
        - run:
            name: Store Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - run: |
            if [ -f /home/circleci/tmp/auth.txt ] && [ $CIRCLE_BRANCH == "master" ]; then
              echo "[DEPLOYING] Auth"
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud container clusters get-credentials rbp-cluster --region europe-north1-a
              kubectl delete pod $(kubectl get pods | awk '/rbp-auth/ {print $1;exit}')
            else
              echo "[SKIPPING] Auth"
            fi

  deploy_booking_docker_image:

      docker:
        - image: google/cloud-sdk

      steps:
        - restore_cache:
            key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
        - run:
            name: Store Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - run: |
            if [ -f /home/circleci/tmp/booking.txt ] && [ $CIRCLE_BRANCH == "master" ]; then
              echo "[DEPLOYING] Booking"
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud container clusters get-credentials rbp-cluster --region europe-north1-a
              kubectl delete pod $(kubectl get pods | awk '/rbp-booking/ {print $1;exit}')
            else
              echo "[SKIPPING] Booking"
            fi

  deploy_report_docker_image:

      docker:
        - image: circleci/openjdk:11-jdk-node-browsers

      steps:
        - restore_cache:
            key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
        - add_ssh_keys:
            fingerprints:
              - "1c:eb:8d:d5:b6:56:34:09:bd:db:bb:de:d2:94:42:33"
        - run: |
            echo "[DEPLOYING] Report"
            ssh-keyscan 52.213.175.2 >> $HOME/.ssh/known_hosts
            ssh ec2-user@52.213.175.2
            container=`sudo docker ps -aqf "name=rbp-report"`
            docker stop $container && docker rm $container
            sudo docker run -d --network rbp-host --name rbp-report -p 3005:3005 mwinteringham/restfulbookerplatform_report:tag

  deploy_room_docker_image:

      docker:
        - image: google/cloud-sdk

      steps:
        - restore_cache:
            key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
        - run:
            name: Store Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - run: |
            if [ -f /home/circleci/tmp/room.txt ] && [ $CIRCLE_BRANCH == "master" ]; then
              echo "[DEPLOYING] Room"
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud container clusters get-credentials rbp-cluster --region europe-north1-a
              kubectl delete pod $(kubectl get pods | awk '/rbp-room/ {print $1;exit}')
            else
              echo "[SKIPPING] Room"
            fi

  deploy_branding_docker_image:

      docker:
        - image: google/cloud-sdk

      steps:
        - restore_cache:
            key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
        - run:
            name: Store Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - run: |
            if [ -f /home/circleci/tmp/branding.txt ] && [ $CIRCLE_BRANCH == "master" ]; then
              echo "[DEPLOYING] Branding"
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud container clusters get-credentials rbp-cluster --region europe-north1-a
              kubectl delete pod $(kubectl get pods | awk '/rbp-branding/ {print $1;exit}')
            else
              echo "[SKIPPING] Branding"
            fi

  deploy_message_docker_image:

    docker:
      - image: google/cloud-sdk

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: |
          if [ -f /home/circleci/tmp/message.txt ] && [ $CIRCLE_BRANCH == "master" ]; then
            echo "[DEPLOYING] Message"
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud container clusters get-credentials rbp-cluster --region europe-north1-a
            kubectl delete pod $(kubectl get pods | awk '/rbp-message/ {print $1;exit}')
          else
            echo "[SKIPPING] Message"
          fi

  deploy_assets_docker_image:

      docker:
        - image: google/cloud-sdk

      steps:
        - restore_cache:
            key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
        - run:
            name: Store Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - run: |
            if [ -f /home/circleci/tmp/assets.txt ] && [ $CIRCLE_BRANCH == "master" ]; then
              echo "[DEPLOYING] Assets"
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud container clusters get-credentials rbp-cluster --region europe-north1-a
              kubectl delete pod $(kubectl get pods | awk '/rbp-assets/ {print $1;exit}')
            else
              echo "[SKIPPING] Assets"
            fi

  run_e2e_checks:

    docker:
      - image: circleci/openjdk:11-jdk-node-browsers

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: | 
            if [ $CIRCLE_BRANCH == "master" ]; then
              node prod_monitor.js
            fi
          working_directory: .utilities/monitor
      - run:
          command: | 
            if [ $CIRCLE_BRANCH == "master" ]; then
              mvn clean test
            fi
          working_directory: end-to-end-tests
          environment:
            TARGET: production
            BROWSER: remote

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - checkout_code
      - run_auth_build:
          requires:
            - checkout_code
      - run_booking_build:
          requires:
            - checkout_code
      - run_report_build:
          requires:
            - checkout_code
      - run_room_build:
          requires:
            - checkout_code
      - run_branding_build:
          requires:
            - checkout_code
      - run_message_build:
          requires:
            - checkout_code
      - run_assets_tests:
          requires:
            - checkout_code
      - build_auth_docker_image:
          requires:
            - run_auth_build
      - build_booking_docker_image:
          requires:
            - run_booking_build
      - build_report_docker_image:
          requires:
            - run_report_build
      - build_room_docker_image:
          requires:
            - run_room_build
      - build_branding_docker_image:
          requires:
            - run_branding_build
      - build_message_docker_image:
          requires:
            - run_message_build
      - build_assets_docker_image:
          requires:
            - run_assets_tests
      - deploy_auth_docker_image:
          requires:
            - build_auth_docker_image
      - deploy_booking_docker_image:
          requires:
            - build_booking_docker_image
      - deploy_report_docker_image:
          requires:
            - build_report_docker_image
      - deploy_room_docker_image:
          requires:
            - build_room_docker_image
      - deploy_branding_docker_image:
          requires:
            - build_branding_docker_image
      - deploy_message_docker_image:
          requires:
            - build_message_docker_image
      - deploy_assets_docker_image:
          requires:
            - build_assets_docker_image
      - run_e2e_checks:
          requires:
            - deploy_auth_docker_image
            - deploy_booking_docker_image
            - deploy_report_docker_image
            - deploy_room_docker_image
            - deploy_assets_docker_image
            - deploy_branding_docker_image
            - deploy_message_docker_image
